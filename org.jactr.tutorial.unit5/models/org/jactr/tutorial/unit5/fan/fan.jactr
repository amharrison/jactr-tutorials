/*
 * 
 */
namespace org.jactr.tutorial.unit5.fan.fan{
import jactr.declarative.*
import jactr.procedural.*
import jactr.retrieval.*
import jactr.imaginal.*
import jactr.visual.*
import jactr.motor.*
import jactr.goal.*

module "org.jactr.core.module.declarative.six.DefaultDeclarativeModule6" [
  "ActivationNoise"          : "0"
  "BaseLevelConstant"        : "0"
  "EnablePartialMatching"    : "false"
  "MaximumDifference"        : "-1"
  "MaximumSimilarity"        : "0"
  "MismatchPenalty"          : "1"
  "PermanentActivationNoise" : "0"]
module "org.jactr.core.module.procedural.six.DefaultProceduralModule6" [
  "DefaultProductionFiringTime" : "0.05"
  "ExpectedUtilityNoise"        : "0"
  "NumberOfProductionsFired"    : "0" ]
module "org.jactr.core.module.goal.six.DefaultGoalModule6" []
module "org.jactr.core.module.declarative.six.learning.DefaultDeclarativeLearningModule6"[
  "BaseLevelLearningRate"      : "NaN" //explicitly turn off base level learning
  "OptimizedLearning"          : "10"
  "MaximumAssociativeStrength" : "1.6"
]
module "org.jactr.core.module.retrieval.six.DefaultRetrievalModule6" [
  "FINSTDurationTime"  : "3.0"
  "LatencyFactor"      : "0.63"
  "NumberOfFINSTs"     : "4"
  "RetrievalThreshold" : "0" ]
module "org.jactr.core.module.random.six.DefaultRandomModule"[]
module "org.jactr.core.module.imaginal.six.DefaultImaginalModule6"[]
module "org.jactr.modules.pm.visual.six.DefaultVisualModule6"["EnableVisualBufferStuff" : "true"]
module "org.jactr.modules.pm.motor.six.DefaultMotorModule6"[]

buffers {
  @Override
   goal {} [
    "Activation"              : "1"
    "StrictHarvestingEnabled" : "false" ]
  @Override  
  imaginal {}[
    "Activation"              : "1"
    "StrictHarvestingEnabled" : "true"]
}


chunktype comprehend-sentence {
  relation = null
  arg1     = null
  arg2     = null
}
chunktype meaning {word=null}


meaning in(word="in"), store(word="store"), lawyer(word="lawyer"), fireman(word="fireman"), bank(word="bank"),
  debutante(word="debutante"), cave(word="cave"), captain(word="captain"), church(word="church"), park(word="park"),
  hippie(word="hippie"), giant(word="giant"), forest(word="forest"), earl(word="earl"), dungeon(word="dungeon"),
  castle(word="castle"), beach(word="beach"), guard(word="guard")

//recently learned
comprehend-sentence p1(relation=in, arg1=hippie, arg2=park), p2(relation=in, arg1=hippie, arg2=church),
  p3(relation=in, arg1=hippie, arg2=bank), p4(relation=in, arg1=captain, arg2=park),
  p5(relation=in, arg1=captain, arg2=cave), p6(relation=in, arg1=debutante, arg2=bank),
  p7(relation=in, arg1=fireman, arg2=park), p8(relation=in, arg1=giant, arg2=beach),
  p9(relation=in, arg1=giant, arg2=castle), p10(relation=in, arg1=giant, arg2=dungeon),
  p11(relation=in, arg1=earl, arg2=castle), p12(relation=in, arg1=earl, arg2=forest),
  p13(relation=in, arg1=lawyer, arg2=store)

//over learned
parameters(in, store, lawyer, fireman, bank, debutante, cave, captain, church, park, hippie, giant, forest, earl,
  dungeon, castle, beach, guard)[
    "BaseLevelActivation"   : "10" //can only do because base level learning is off
  ]


production find-person{
  ?visual-location{
    buffer = unrequested
  } 
  ?imaginal{
    buffer = empty
  }
}{
  +imaginal{
    isa comprehend-sentence
  }
  +visual-location{
    isa visual-location
    screen-x > -2.5
    screen-x < -1.5
  }
}

production attend-visual-location{
  visual-location{
    isa visual-location
  }
  ?visual-location{
    buffer = requested
  }
  ?visual{
    state != busy
  }
}{
  +visual{
    isa attend-to
    where = =visual-location
  } 
}

production retrieve-meaning{
  visual{
    isa text
    value = =word
  }
  ?retrieval{
    state != busy
  }
}{
  +retrieval{
    isa meaning
    word = =word
  }
}

production encode-person{
  retrieval{
    isa meaning
  }
  imaginal{
    isa comprehend-sentence
    arg1 = null
  }
}{
  imaginal{
    arg1 = =retrieval
  }
  +visual-location{
    isa visual-location
    screen-x > 2.5
    screen-x < 3.5
  }
}

production encode-location{
  retrieval{
    isa meaning
  }
  imaginal{
    isa comprehend-sentence
    arg1 = =arg1
    arg2 = null
  }
}{
  imaginal{
    arg2 = =retrieval
  }
}

production retrieve-from-person{
  imaginal{
    isa comprehend-sentence
    arg1 = =person
    arg2 = =location
  }
  ?retrieval{
    state = free
    buffer = empty
  }
}{
  imaginal{}
  +retrieval{
    isa comprehend-sentence
    arg1 = =person
    relation != null
  }
}

production retrieve-from-location{
  imaginal{
    isa comprehend-sentence
    arg1 = =person
    arg2 = =location
  }
  ?retrieval{
    state = free
    buffer = empty
  }
}{
  imaginal{}
  +retrieval{
    isa comprehend-sentence
    arg2 = =location
    relation != null
  }
}

production respond-yes{
  imaginal{
    isa comprehend-sentence
    arg1 = =person
    arg2 = =location
  }
  retrieval{
    isa comprehend-sentence
    arg1 = =person
    arg2 = =location
  }
  ?motor{
    state = free
  }
}{
  +motor{
    isa press-key
    key = "k"
  }
  -imaginal{
    arg1 = null
    arg2 = null
  }
}

production mismatch-person{
  imaginal{
    isa comprehend-sentence
    arg1 = =person
    arg2 = =location
  }
  retrieval{
    isa comprehend-sentence
    arg1 != =person
  }
  ?motor{
    state = free
  }
}{
  +motor{
    isa press-key
    key = "d"
  }
  //prevent encoding of foils
  -imaginal{
    arg1 = null
    arg2 = null
  }
}

production mismatch-location{
  imaginal{
    isa comprehend-sentence
    arg1 = =person
    arg2 = =location
  }
  retrieval{
    isa comprehend-sentence
    arg2 != =location
  }
  ?motor{ 
    state = free
  }
}{ 
  +motor{
    isa press-key
    key = "d"
  }
  //prevent encoding of foils
  -imaginal{
    arg1 = null
    arg2 = null
  }
}




}[
  "EnablePersistentExecution" : "true"
  "EnableUnusedCycleSkipping" : "false"
 ]
