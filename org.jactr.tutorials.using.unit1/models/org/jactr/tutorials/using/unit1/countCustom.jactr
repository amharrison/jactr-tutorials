<actr>
  <model name="Unit1 Count">

    <modules>
      <module class="org.jactr.core.module.declarative.six.DefaultDeclarativeModule6"/>
      <module class="org.jactr.core.module.procedural.six.DefaultProceduralModule6"/>
      <module class="org.jactr.core.module.goal.six.DefaultGoalModule6"/>
      <module class="org.jactr.core.module.retrieval.six.DefaultRetrievalModule6"/>
    </modules>

 
    <declarative-memory>
      <chunk-type name="count-order">
        <slot name="first" equals="nil"/>
        <slot name="second" equals="nil"/>
      </chunk-type>

      <chunk-type name="count-from">
        <slot name="start" equals="nil"/>
        <slot name="end" equals="nil"/>
        <slot name="step" equals="nil"/>
      </chunk-type>

      <chunk name="start" type="chunk"/>
      <chunk name="counting" type="chunk"/>
      <chunk name="stop" type="chunk"/>


      <chunk type="count-order" name="b">
        <slot name="first" equals="1"/>
        <slot name="second" equals="2"/>
      </chunk>

      <chunk type="count-order" name="c">
        <slot name="first" equals="2"/>
        <slot name="second" equals="3"/>
      </chunk>

      <chunk type="count-order" name="d">
        <slot name="first" equals="3"/>
        <slot name="second" equals="4"/>
      </chunk>

      <chunk type="count-order" name="e">
        <slot name="first" equals="4"/>
        <slot name="second" equals="5"/>
      </chunk>

      <chunk type="count-order" name="f">
        <slot name="first" equals="5"/>
        <slot name="second" equals="6"/>
      </chunk>

      <chunk type="count-from" name="first-goal">
        <slot name="start" equals="2"/>
        <slot name="end" equals="100"/>
        <slot name="step" equals="start"/>
      </chunk>

    </declarative-memory>
    <procedural-memory>
      <production name="start">
        <conditions>
          <match buffer="goal" type="count-from">
            <slot name="start" equals="=num1"/>
            <slot name="step" equals="start"/>
          </match>
        </conditions>
        <actions>
          <modify buffer="goal">
            <slot name="step" equals="counting"/>
          </modify>
          <add buffer="retrieval" type="count-order">
            <slot name="first" equals="=num1"/>
          </add>
          <output>"Searching for something starting at =num1"</output>
        </actions>
      </production>

      <production name="failed">
        <conditions>
          <match buffer="goal" type="count-from">
            <slot name="start" equals="=num"/>
            <slot name="step" equals="counting"/>
          </match>
          <query buffer="retrieval">
            <slot name="state" equals="error"/>
          </query>
        </conditions>
        <actions>
          <proxy-action class="org.jactr.tutorials.using.unit1.NextCountAction">
            <slot name="first" equals="=num"/>
          </proxy-action>
          <output> "Oops. Trying again "</output>
          <modify buffer="goal">
            <slot name="step" equals="start"/>
          </modify>
        </actions>
      </production>

      <production name="increment">
        <conditions>
          <match buffer="goal" type="count-from">
            <slot name="start" equals="=num1"/>
            <slot name="end" not="=num1"/>
            <slot name="step" equals="counting"/>
          </match>
          <match buffer="retrieval" type="count-order">
            <slot name="first" equals="=num1"/>
            <slot name="second" equals="=num2"/>
          </match>
        </conditions>
        <actions>
          <modify buffer="goal">
            <slot name="start" equals="=num2"/>
          </modify>
          <add buffer="retrieval" type="count-order">
            <slot name="first" equals="=num2"/>
          </add>
          <output>"=num1"</output>
        </actions>
      </production>


      <production name="stop">
        <conditions>
          <match buffer="goal" type="count-from">
            <slot name="start" equals="=num"/>
            <slot name="end" equals="=num"/>
            <slot name="step" equals="counting"/>
          </match>
        </conditions>
        <actions>
          <modify buffer="goal">
            <slot name="step" equals="stop"/>
          </modify>
          <output>"Answer =num"</output>
        </actions>
      </production>
    </procedural-memory>

    <buffer name="goal" chunk="first-goal"/>
  </model>
</actr>